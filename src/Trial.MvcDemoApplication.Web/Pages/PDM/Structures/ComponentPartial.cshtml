@model Trial.MvcDemoApplication.PDM.Dtos.Structure.ComponentHierarchyDto
@{
    Guid structureId = ViewData.ContainsKey("structureId") ? (Guid)ViewData["structureId"]!
            //Guid.TryParse(, out var sId)? sId 
            : Guid.Empty;
    bool isRootLevel = ViewData.ContainsKey("isRootLevel") && Convert.ToBoolean(ViewData["isRootLevel"]);
    bool isLastSubComponent = ViewData.ContainsKey("isLastSubComponent") && Convert.ToBoolean(ViewData["isLastSubComponent"]);
    bool isFirstSubComponent = ViewData.ContainsKey("isFirstSubComponent") && Convert.ToBoolean(ViewData["isFirstSubComponent"]);
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.0/css/all.min.css">
@section scripts
{
    <abp-script src="/Pages/PDM/Structures/Index.js">
        var myData = '@Model.Id';
    </abp-script>
}
<style>
    /* Style for the list items */
    li {
        font-size: 18px; /* Adjust based on your preference */
        margin-bottom: 3px;
    }

    /* General button styles */
    .btn-icon {
        background-color: #f8f8f8; /* Light grey background */
        border: 1px solid #ccc; /* Border color */
        border-radius: 4px; /* Rounded corners */
        padding: 2px 6px; /* Decreased padding for smaller button size */
        margin-left: 10px; /* Space between the text and the button */
        cursor: pointer; /* Change cursor on hover */
        transition: background 0.3s; /* Smooth transition effect */
        font-size: 12px; /* Decreased font size for icons to further reduce button size */
        vertical-align: middle; /* To align the button vertically with the text */
    }

    .btn-icon:hover {
        background-color: #d0d0d0; /* Darker grey on hover */
    }

    .add-btn .fas {
        color: green;
    }

    .remove-btn .fas {
        color: red;
    }

    .up-btn .fas, .down-btn .fas {
        color: #333; /* Dark gray, adjust as needed */
    }

    /* Icons within the buttons */
    .btn-icon i {
        font-size: 12px; /* Size of the icon */
    }

</style>
<li>
    <span class="component-name">@Model.Name</span>
    <!-- Add Button -->
    <button class="btn-icon add-btn" onclick="handleAdd('@Model.Id')" title="Add Sub Component">
        <i class="fas fa-plus"></i>
    </button>

    <!-- Remove Button -->
    <button class="btn-icon remove-btn" onclick="handleRemove('@Model.Id')" title="Remove Component and its Sub-Components">
        <i class="fas fa-times"></i>
    </button>
    @if (!isRootLevel)
    {
        @if(!isFirstSubComponent)
        {
            <!-- Up Arrow Button -->
            <button class="btn-icon up-btn" onclick="handleMoveUp('@Model.Id')" title="Move Sub Component Up">
                <i class="fas fa-arrow-up"></i>
            </button>
        }
        @if (!isLastSubComponent)
        {
            <!-- Down Arrow Button -->
            <button class="btn-icon down-btn" onclick="handleMoveDown('@Model.Id')" title="Move Sub Component Down">
                <i class="fas fa-arrow-down"></i>
            </button>
        }
    }
    @if (Model.SubComponents?.Any() == true)
    {
        int i = 0;
        ViewData["isRootLevel"] = false;
        ViewData["isFirstSubComponent"] = true;
        <ul>
            @foreach (var subComponent in Model.SubComponents)
            {
                ViewData["isLastSubComponent"] = i + 1 == Model.SubComponents.Count;
                <partial name="ComponentPartial" model="@subComponent" />
                i++;
                ViewData["isFirstSubComponent"] = false;
            }
        </ul>
    }
</li>
<script>
    function handleAdd(componentId) {
        var createModal = new abp.ModalManager(abp.appPath + 'PDM/Components/CreateModal');
        createModal.open({ parentComponentId: componentId })
                .then(function () {
                    abp.notify.info('Added Sub-component Successfully!');
                });
        @*trial.mvcDemoApplication.pDM.component.get(id).done(function (result) { console.log(result); });*@
        // logic for handling add operation
        createModal.onResult(function () {
            location.href = "/PDM/Structures/ViewHierarchy?id=" + '@structureId';
        });
    }


    function handleRemove(id) {
        // logic for handling remove operation
        trial.mvcDemoApplication.pDM.component.delete(id)
        .then(function(data) {
                location.href = "/PDM/Structures/ViewHierarchy?id=" + '@structureId';
                abp.notify.info('Successfully deleted!');
            })
    }

    function handleMoveUp(id) {
        // logic for moving up
        alert('Move up clicked for ID: ' + id);
    }

    function handleMoveDown(id) {
        // logic for moving down
        alert('Move down clicked for ID: ' + id);
    }
</script>
